# Aggregation of nodes and edges based in cluster assgiment
df_nodes1 <- df_nodes[,list(N=sum(N), Mj=sum(N*Mj)/sum(N), Ma=sum(N*Ma)/sum(N), M = sum(N*M)/sum(N), B = sum(N*M)),by=cluster]
df_nodes2 <- sqldf("select cluster, sum(N) as N, sum(N*Mj)/sum(N) as Mj, sum(N*Ma)/sum(N) as Ma, sum(N*M)/sum(N) as M, sum(N*M) as B from df_nodes group by cluster")
df_nodes2
df_nodes1
df_nodes <- data.table(get.data.frame(g, what="vertices"))
df_edges <- data.table(get.data.frame(g, what=c("edges")))
#}
# Match edges with cluster nodes
#df_nodes$cluster <- paste("c",df_nodes$cluster,sep="")
df_edges$from <- df_nodes$cluster[ match(df_edges$from, df_nodes$name) ]
df_edges$to   <- df_nodes$cluster[ match(df_edges$to,   df_nodes$name) ]
# Aggregation of nodes and edges based in cluster assgiment
df_nodes1 <- df_nodes[,list(N=sum(N), Mj=sum(N*Mj)/sum(N), Ma=sum(N*Ma)/sum(N), M = sum(N*M)/sum(N), B = sum(N*M)),by=cluster]
df_nodes1 <- df_nodes1[order(cluster)]
df_nodes2 <- sqldf("select cluster, sum(N) as N, sum(N*Mj)/sum(N) as Mj, sum(N*Ma)/sum(N) as Ma, sum(N*M)/sum(N) as M, sum(N*M) as B from df_nodes group by cluster")
df_nodes1
df_nodes2
df_nodes2 <- data.table(sqldf("select cluster, sum(N) as N, sum(N*Mj)/sum(N) as Mj, sum(N*Ma)/sum(N) as Ma, sum(N*M)/sum(N) as M, sum(N*M) as B from df_nodes group by cluster order by cluster"))
df_nodes2
df_nodes1
sqldf("select from, to, sum(biomass.flow) from df_edges group by (from,to)")
sqldf("select from, to, sum(biomass.flow) from df_edges group by from,to")
sqldf("select from, to, sum(biomass.flow) from df_edges group by from, to")
sqldf("select from, to, sum(biomass.flow) from df_edges
sqldf("select from, to, sum(biomass.flow) from df_edges group by from, to")
sqldf("select from, to, sum(biomass.flow) from df_edges)
)
sdf
sdf
(((())))
)
sql
)))))))))))))))))
(((((((((((((())))))))))))))
dsf
exit
qewr
sadfsdaf
f("select"
> sqldf("select from, to, sum(biomass.flow) from df_edges)
+ )
+ sdf
+ sdf
+ (((())))
+ )
+ sql
+ )))))))))))))))))
+ (((((((((((((())))))))))))))
+ dsf
+ exit
+ qewr
+
+
+
df_nodes
sqldf("select sum(biomass.flow) from df_edges group by from)
sqldf("select from, to, sum(biomass.flow) from df_edges)
sqldf("select sum(biomass.flow) from df_edges group by from")
sqldf("select * from df_edges group by from")
sqldf("select * from df_edges")
sqldf("select * from df_edges group by to")
colnames(df_edges)
sqldf("select * from df_edges group by biomass.flow")
df_edges
sqldf("select * from df_edges")
?setnames
setnames(df_edges,old=c("from","to","biomass.flow"),new=c("prey","pred","biomass"))
df_edges
sqldf("select * from df_edges group by biomass")
sqldf("select * from df_edges group by from,to")
sqldf("select * from df_edges group by prey,pred")
sqldf("select sum(biomass) from df_edges group by prey,pred")
sqldf("select pred,prey,sum(biomass) from df_edges group by prey,pred")
sqldf("select pred,prey,biomass from df_edges where prey==60")
sqldf("select prey,pred,biomass from df_edges where prey==60")
sqldf("select prey,pred,biomass from df_edges where prey==60 order by pred")
sqldf("select prey,pred,biomass from df_edges where prey==60 and pred==60")
ss=sqldf("select prey,pred,biomass from df_edges where prey==60 and pred==60")
sum(ss)
sum(ss$biomass)
sqldf("select pred,prey,sum(biomass) from df_edges group by prey,pred")
sum(ss$biomass)
sqldf("select pred,prey, M, N from df_edges INNER JOIN df_nodes1 where df_nodes1.cluster=prey && df_nodes1.cluster==pred")
sqldf("select pred,prey, M, N from df_edges INNER JOIN df_nodes1 where df_nodes1.cluster=prey AND df_nodes1.cluster==pred")
ss=sqldf("select prey,pred,biomass from df_edges where prey==60 and pred==60")
ss
ss=sqldf("select prey,pred,biomass from df_edges where prey==60 and pred=60")
ss
ss=sqldf("select prey,pred,biomass from df_edges where prey=60 and pred=60")
ss
sqldf("SELECT df_edges.prey,df_edges.pred, dn1.M, dn2.N
FROM df_edges
INNER JOIN df_nodes1 dn1 ON dn1.cluster = df_edges.prey
INNER JOIN df_nodes1 dn2 ON dn2.cluster = df_edges.pred
")
sqldf("SELECT df_edges.prey,df_edges.pred, dn1.M, dn2.N
FROM df_edges
INNER JOIN df_nodes1 dn1 ON dn1.cluster = df_edges.prey
INNER JOIN df_nodes1 dn2 ON dn2.cluster = df_edges.pred
GROUP BY df_edges.prey,df_edges.pred
")
sqldf("SELECT df_edges.prey,df_edges.pred, df_edges.biomass, dn1.M, dn2.N
FROM df_edges
INNER JOIN df_nodes1 dn1 ON dn1.cluster = df_edges.prey
INNER JOIN df_nodes1 dn2 ON dn2.cluster = df_edges.pred
GROUP BY df_edges.prey,df_edges.pred
")
sqldf("SELECT df_edges.prey,df_edges.pred, df_edges.biomass, dn1.M, dn2.N
FROM df_edges
INNER JOIN df_nodes1 dn1 ON dn1.cluster = df_edges.prey
INNER JOIN df_nodes1 dn2 ON dn2.cluster = df_edges.pred
GROUP BY df_edges.prey,df_edges.pred
")
merge(df_edges,df_nodes1)
?merge
merge(df_edges,df_nodes1,by.x=pred,by.y=cluster)
merge(df_edges,df_nodes1,by.x="pred",by.y="cluster")
names(df_edges)
names(df_nodes1)
merge(df_edges,df_nodes1,by.y="pred",by.x="cluster")
merge(df_edges,df_nodes1,by="pred",by.x="pred",by.y="cluster")
merge(df_edges,df_nodes1,by.x="pred",by.y="cluster")
merge.data.frame(df_edges,df_nodes1,by.x="pred",by.y="cluster")
merge.data.frame(df_edges,df_nodes1,by.x="pred",by.y="cluster",all.y=FALSE)
?joined
df1 = data.frame(CustomerId=c(1:6),Product=c(rep("Toaster",3),rep("Radio",3)))
df2 = data.frame(CustomerId=c(2,4,6),State=c(rep("Alabama",2),rep("Ohio",1)))
dt1<-data.table(df1,  key="CustomerId")
dt2<-data.table(df2, key="CustomerId")
df1
df2
dt1
dt2
joined.dt1.dt.2<-dt1[dt2]
dt2
dt1
.(3,2,4)
c(3,2,4)
df_edges
df_edges[0]
df_edges1[df_nodes]
df_edges1
df_edges[df_nodes1]
df_edges[][]
df_edges[df_edges.prey_id=df_nodes1$cluster]
df_edges[df_edges.prey_id==df_nodes1$cluster]
df_edges[df_edges.prey==df_nodes1$cluster]
df_edges[prey==df_nodes1$cluster]
df_edges[prey==df_nodes1$cluster,df_nodes$cluster]
df_edges[prey==df_nodes1$cluster, list(prey,pred,df_nodes$cluster)]
df_edges[prey==df_nodes1$cluster, list(prey,pred,df_nodes1$cluster)]
a <- data.table(a=c(1,2,3),b=c(3,4,5))
b <- data.table(a=c(1,2),k=c(1,2))
merge(a,b,by="a",all.x=T)
a
b
merge(df_nodes,df_edges,by.x="pred",by.y="cluster")
class(df_nodes)
class(df_edges)
df_edges[df_nodes$cluster]
df_edges[df_nodes1$cluster==df_edges==prey]
df_edges[df_nodes1$cluster=df_edges==prey]
df_edges[df_nodes1$cluster=df_edges$prey]
df_edges[df_nodes1$cluster==df_edges$prey]
df_edges
df_edges[df_nodes1$cluster==df_edges$prey,prey]
df_edges
df_edges[df_nodes1[keyby=cluster]]
df_edges[df_nodes1[keyby=cluster],keyby=prey]
df_edges[df_nodes1[,,keyby=cluster],,keyby=prey]
df_edges[df_nodes1$cluster==df_edges$prey,prey]
df_nodes[keyby=cluster]
df_nodes1[keyby=cluster]
df_edges[df_nodes1[keyby=cluster],keyby=prey]
df_edges[df_nodes1[keyby=cluster],prey,keyby=prey]
setkey(df_nodes1,cluster)
df_nodes1
haskey(df_nodes1)
df_edges[df_nodes1[]
]
df_edges[df_nodes1]
foverlaps(df_edges,df_nodes1,by.x=prey)
foverlaps(df_edges,df_nodes1,by.x="prey")
df_nodes1[df_edges$prey]
df_edges$prey
df_nodes1[df_edges$prey]
df_edges1[,df_nodes1[df_edges$prey]]
df_nodes1[df_edges$prey]
df_nodes[df_nodes@cluster==34]
df_nodes[df_node$cluster==34]
df_nodes1[df_node1$cluster==34]
df_nodes1[df_nodes1$cluster==34]
df_nodes1[df_edges$prey]
df_nodes1[df_edges$prey,list(N)]
df_nodes1[df_edges$prey,list(N,M)]
df_edges
df_nodes1[df_edges$prey,M]
df_nodes1[df_edges$prey,M]
df_nodes1[df_edges$pred,M]
data.table(Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
data.table(prey=df_edges$prey,pred=df_edges$pred,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
df_edges_temp <- data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
df_edges_temp[,list(prey,pred,sum(biomass), Mp, Nq),by=prey,pred]
df_edges_temp[,list(prey,pred,sum(biomass), Mp, Nq)]
df_edges_temp[,list(prey,pred,biomass, Mp, Nq), by=prey]
df_edges_temp[,list(prey,pred,biomass, Mp, Nq), by=prey,pred]
df_edges_temp[,list(prey,pred,biomass, Mp, Nq), by=list(prey,pred)]
df_edges_temp[,list(biomass, Mp, Nq), by=list(prey,pred)]
df_edges_temp[,list(sum(biomass), sum(Mp), sum(Nq), by=list(prey,pred)]
df_edges_temp[,list(sum(biomass), sum(Mp), sum(Nq)), by=list(prey,pred)]
func_temp <- function(df_edges,df_nodes)
{
df_edges_temp <- data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
return(df_edges_temp[,list(sum(biomass), sum(Mp), sum(Nq)), by=list(prey,pred)])
}
func_temp_ver2 <- function(df_edges,df_nodes1)
{
df_e<-sqldf("SELECT df_edges.prey,df_edges.pred, df_edges.biomass, dn1.M, dn2.N
FROM df_edges
INNER JOIN df_nodes1 dn1 ON dn1.cluster = df_edges.prey
INNER JOIN df_nodes1 dn2 ON dn2.cluster = df_edges.pred
GROUP BY df_edges.prey,df_edges.pred
")
return(df_e)
}
func_temp(df_edges,df_nodes1)
func_temp <- function(df_edges,df_nodes)
{
df_edges_temp <- data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
return(df_edges_temp[,list(sum(biomass), sum(Mp), sum(Nq)), by=list(prey,pred)])
}
func_temp_ver2 <- function(df_edges,df_nodes1)
{
df_e<-sqldf("SELECT df_edges.prey,df_edges.pred, sum(df_edges.biomass), sum(dn1.M), sum(dn2.N)
FROM df_edges
INNER JOIN df_nodes1 dn1 ON dn1.cluster = df_edges.prey
INNER JOIN df_nodes1 dn2 ON dn2.cluster = df_edges.pred
GROUP BY df_edges.prey,df_edges.pred
")
return(df_e)
}
func_temp(df_edges,df_nodes1)
func_temp_2(df_edges,df_nodes1)
func_temp_ver2(df_edges,df_nodes1)
ss<-func_temp_ver2(df_edges,df_nodes1)
microbenchmark(as.data.table(ss),data.table(ss))
func_temp <- function(df_edges,df_nodes)
{
df_edges_temp <- data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
return(df_edges_temp[,list(sum(biomass), sum(Mp), sum(Nq)), by=list(prey,pred)])
}
func_temp_ver2 <- function(df_edges,df_nodes1)
{
df_e<-sqldf("SELECT df_edges.prey,df_edges.pred, sum(df_edges.biomass), sum(dn1.M), sum(dn2.N)
FROM df_edges
INNER JOIN df_nodes1 dn1 ON dn1.cluster = df_edges.prey
INNER JOIN df_nodes1 dn2 ON dn2.cluster = df_edges.pred
GROUP BY df_edges.prey,df_edges.pred
")
return(as.data.table(df_e)
}
func_temp <- function(df_edges,df_nodes)
{
df_edges_temp <- data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
return(df_edges_temp[,list(sum(biomass), sum(Mp), sum(Nq)), by=list(prey,pred)])
}
func_temp_ver2 <- function(df_edges,df_nodes1)
{
df_e<-sqldf("SELECT df_edges.prey,df_edges.pred, sum(df_edges.biomass), sum(dn1.M), sum(dn2.N)
FROM df_edges
INNER JOIN df_nodes1 dn1 ON dn1.cluster = df_edges.prey
INNER JOIN df_nodes1 dn2 ON dn2.cluster = df_edges.pred
GROUP BY df_edges.prey,df_edges.pred
")
return(as.data.table(df_e))
}
ss<-func_temp_ver2(df_edges,df_nodes1)
tt<-func_temp(df_edges,df_nodes1)
tt
ss
?setkey
key(df_nodes)
key(df_nodes1)
rr <- df_noes1
rr <- df_nodes1
rr
rr
rr[,B:=B*2]
rr
df_nodes1
rr
rr[,B:=B*10]
rr
func_temp <- function(df_edges,df_nodes)
{
df_edges_temp <- data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
df_edges_temp <- df_edges_temp[,list(sum(biomass), sum(Mp), sum(Nq)), by=list(prey,pred)]
return(df_edges_temp[order(prey)])
}
func_temp_ver2 <- function(df_edges,df_nodes1)
{
df_e<-as.data.table(sqldf("SELECT df_edges.prey,df_edges.pred, sum(df_edges.biomass), sum(dn1.M), sum(dn2.N)
FROM df_edges
INNER JOIN df_nodes1 dn1 ON dn1.cluster = df_edges.prey
INNER JOIN df_nodes1 dn2 ON dn2.cluster = df_edges.pred
GROUP BY df_edges.prey,df_edges.pred
ORDER by df_edges.prey
"))
return(as.data.table(df_e))
}
ss <- func_temp(df_edges,df_nodes1)
rr <- func_temp_ver2(df_edges,df_nodes1)
ss
rr
func_temp <- function(df_edges,df_nodes)
{
df_edges_temp <- data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
df_edges_temp <- df_edges_temp[,list(sum(biomass), sum(Mp), sum(Nq)), by=list(prey,pred)]
return(df_edges_temp[order(prey,pred)])
}
func_temp_ver2 <- function(df_edges,df_nodes1)
{
df_e<-as.data.table(sqldf("SELECT df_edges.prey,df_edges.pred, sum(df_edges.biomass), sum(dn1.M), sum(dn2.N)
FROM df_edges
INNER JOIN df_nodes1 dn1 ON dn1.cluster = df_edges.prey
INNER JOIN df_nodes1 dn2 ON dn2.cluster = df_edges.pred
GROUP BY df_edges.prey,df_edges.pred
ORDER by df_edges.prey,df_edges.pred
"))
return(as.data.table(df_e))
}
ss <- func_temp(df_edges,df_nodes1)
rr <- func_temp_ver2(df_edges,df_nodes1)
ss
rr
microbenchmark(ss <- func_temp(df_edges,df_nodes1),rr <- func_temp_ver2(df_edges,df_nodes1))
df_edges_temp <- data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
df_edges_temp
df_edges_temp <- data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
df_edges_temp <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/(Mp*Nq), by=list(prey,pred)]
df_edges_temp <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/(Mp*Nq)), by=list(prey,pred)]
df_edges_temp
xx <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/(Mp*Nq)), by=list(prey,pred)]
df_edges_temp <- data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
xx <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/(Mp*Nq)), by=list(prey,pred)]
xx
yy <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/(mean(Mp*Nq))), by=list(prey,pred)]
yy
yy <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/(mean(Mp*Nq)),Np,Nq), by=list(prey,pred)]
yy <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/(mean(Mp*Nq)),Mp,Nq), by=list(prey,pred)]
yy
yy <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/(Mp*Np),Mp,Nq), by=list(prey,pred)]
yy <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/(Mp*Nq),Mp,Nq), by=list(prey,pred)]
yy
xx <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/mean(Mp*Nq),mean(Mp),mean(Nq), by=list(prey,pred)]
xx <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/mean(Mp*Nq),mean(Mp),mean(Nq)), by=list(prey,pred)]
xx
xx = xx[ordered(prey,pred)]
xx = xx[order(prey,pred)]
yy = yy[order(prey,pred)]
xx
yy
yy[prey=1 & pred &1]
yy[prey=1 & pred=1]
yy[yy$prey=1 & yy$pred=1]
yy[yy$prey=1]
yy
yy[prey==1]
yy[prey=1]
yy[prey==1]
yy[prey==1&pred==1]
xx[prey==1&pred==1]
zz<-data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes1[df_edges$pred,M],Nq=df_nodes1[df_edges$prey,N])
zz[prey==1&pred==1]
sum(zz[,biomass])
xx<-df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/(mean(Mp*Nq))), by=list(prey,pred)]
xx
xx[prey==1&pred==1]
sum(z[,biomass])
sum(z[,biomass])
sum(zz[,biomass])
sum(zz[,biomass])/mean(zz[,Mp]*zz[,Nq])
xx[prey==7&pred==8]
zz[prey==7&pred==8]
sum(z[,biomass])
sum(zz[,biomass])
xx[prey==7&pred==8]
sum(zz[prey==1&pred==1,biomass])
xx[prey==1&pred==1]
sum(zz[prey==1&pred==1,biomass])/mean(zz[prey==1&pred==1,Mp]*zz[prey==1&pred==1,Nq])
E(g)$weight
E(g)
ecount(g)
if(g != NULL)
{
df_nodes <- data.table(get.data.frame(g, what="vertices"))
df_edges <- data.table(get.data.frame(g, what=c("edges")))
}
# Match edges with cluster nodes
#df_nodes$cluster <- paste("c",df_nodes$cluster,sep="")
df_edges$from <- df_nodes$cluster[ match(df_edges$from, df_nodes$name) ]
df_edges$to   <- df_nodes$cluster[ match(df_edges$to,   df_nodes$name) ]
setnames(df_edges,old=c("from","to","biomass.flow"),new=c("prey","pred","biomass"))
# Aggregation of nodes and edges based in cluster assgiment
df_nodes <- df_nodes[,list(N=sum(N), Mj=sum(N*Mj)/sum(N), Ma=sum(N*Ma)/sum(N), M = sum(N*M)/sum(N), B = sum(N*M)),by=cluster]
df_edges_temp <- data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes[df_edges$pred,M],Nq=df_nodes[df_edges$prey,N])
df_edges_temp <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/(mean(Mp)*mean(Nq))), by=list(prey,pred)]
df_edges <- df_edges_temp[order(prey,pred)]
g
df_nodes <- data.table(get.data.frame(g, what="vertices"))
df_edges <- data.table(get.data.frame(g, what=c("edges")))
# Match edges with cluster nodes
#df_nodes$cluster <- paste("c",df_nodes$cluster,sep="")
df_edges$from <- df_nodes$cluster[ match(df_edges$from, df_nodes$name) ]
df_edges$to   <- df_nodes$cluster[ match(df_edges$to,   df_nodes$name) ]
setnames(df_edges,old=c("from","to","biomass.flow"),new=c("prey","pred","biomass"))
# Aggregation of nodes and edges based in cluster assgiment
df_nodes <- df_nodes[,list(N=sum(N), Mj=sum(N*Mj)/sum(N), Ma=sum(N*Ma)/sum(N), M = sum(N*M)/sum(N), B = sum(N*M)),by=cluster]
df_edges_temp <- data.table(prey=df_edges$prey,pred=df_edges$pred,biomass=df_edges$biomass,Mp=df_nodes[df_edges$pred,M],Nq=df_nodes[df_edges$prey,N])
df_edges_temp <- df_edges_temp[,list(biomass=sum(biomass), lambda_indvidual_rate = sum(biomass)/(mean(Mp)*mean(Nq))), by=list(prey,pred)]
df_edges <- df_edges_temp[order(prey,pred)]
df_edges
df_edges[,weight:=lambda_indvidual_rate]
df_edges
df_edges[,weight:=lambda_indvidual_rate]
microbenchmark(df_edges[,weight:=lambda_indvidual_rate],df_edges$weight=lambda_indvidual_rate)
microbenchmark(df_edges[,weight:=lambda_indvidual_rate],df_edges$weight <- lambda_indvidual_rate)
microbenchmark(df_edges[,weight:=lambda_indvidual_rate],df_edges$weight <- df_edges$lambda_indvidual_rate)
microbenchmark(df_edges[,weight:=lambda_indvidual_rate],df_edges$weight <- df_edges$lambda_indvidual_rate)
microbenchmark(df_edges[,weight:=lambda_indvidual_rate],df_edges$weight <- df_edges$lambda_indvidual_rate)
source('~/Dropbox/microsoft_research/main_script.r')
debugSource('~/Dropbox/microsoft_research/main_script.r')
debugSource('~/Dropbox/microsoft_research/main_script.r')
df_edges[,weight:=lambda_indvidual_rate]
debugSource('~/Dropbox/microsoft_research/main_script.r')
debugSource('~/Dropbox/microsoft_research/main_script.r')
df_nodes
df_nodes
df_edges
g
df_nodes==NULL
df_nodes is NULL
g != NULL
g == NULL
is.null(g)
is.null(df_edges)
is.null(df_nodes)
g &df_dedges
g && df_dedges
g & df_edges
g && df_edges
g & df_edges
!F
source('~/Dropbox/microsoft_research/main_script.r')
source('~/Dropbox/microsoft_research/main_script.r')
source('~/Dropbox/microsoft_research/main_script.r')
g
plot(g)
layout.kamada.kawai(g)
g
plot(g,layout=layout.kamada.kawai(g))
g
get.adjacency(g,attr=lambda_individual_rate)
get.adjacency(g,attr="lambda_individual_rate")
get.adjacency(g,attr="lambda_indvidual_rate")
library(lattice)
levelplot(get.adjacency(g,attr="lambda_indvidual_rate")
)
class(get.adjacency(g,attr="lambda_indvidual_rate"))
as.matrix(get.adjacency(g,attr="lambda_indvidual_rate"))
levelplot(as.matrix(get.adjacency(g,attr="lambda_indvidual_rate")))
levelplot(log10(as.matrix(get.adjacency(g,attr="lambda_indvidual_rate"))))
rm(ls())
help rm
?rm
rm(list=ls())
l2keep <- 10
nL <- countLines("your.csv")
installed.packages("swirl")
install.packages("swirl")
library(swirl)
setwd("/home/cflores/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01
")
setwd("/home/cflores/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01")
list.files()
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
exists(df_power)
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
exists("df_power")
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
source('~/Dropbox/Coursera/data_science/exploratory_data_analysis/project_01/plot1.R')
df_power
head(df_power)
require(data.library)
require(data.table)
hist(df_power$Global_active_power)
hist(df_power$Global_active_power,color="red")
hist(df_power$Global_active_power,col="red")
